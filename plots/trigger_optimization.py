import sys

import numpy as np
import matplotlib.pyplot as plt


def plot_far(model_name, model_results, random_results, trigger_length):
    normalized_model_results = get_normalized_values(model_results)
    normalized_random_results = get_normalized_values(random_results)

    x_axis = np.arange(0, 1.1, 0.1)
    x_axis[0] = 0.003
    x_axis[-1] = 0.997
    fig, ax = plt.subplots(zorder=0)
    ax.plot(
        x_axis, normalized_model_results, "o-", color='r', linewidth=2.0, markersize=14,
        label=f"Optimized {trigger_length}-byte trigger", zorder=1
    )
    ax.plot(
        x_axis, normalized_random_results, "o-", color="orange", linewidth=2.0, markersize=14,
        label=f"Random {trigger_length}-byte trigger", zorder=1
    )

    for x, y in zip(x_axis[1:], normalized_model_results[1:]):
        plt.annotate(f"{y:.2f}", (x, y), textcoords="offset points", xytext=(0, 10), ha='center', fontsize=25)

    ax.set(xlim=(0, 1.), ylim=(0, 110))
    ax.set_xticks(np.arange(0, 1.1, 0.1), [f"{x:.1f}" for x in np.arange(0, 1.1, 0.1)], fontsize=30)
    ax.set_yticks(np.arange(10, 110, 10), np.arange(10, 110, 10), fontsize=30)
    ax.set_ylabel("MTS (%)", fontsize=32)

    ax.set_title(f"{model_name.upper()} - Trigger Effectiveness", fontsize=50)
    ax.legend(loc="center right", fontsize=32)
    ax.grid()

    plt.subplots_adjust(left=0.27, bottom=0.05, right=0.9, top=0.926)
    plt.show()


def get_normalized_values(values_dict):
    tot = sum(values_dict.values())
    thresholds = [0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.]
    normalized_values = []
    for threshold_1 in thresholds:
        total_value = 0
        for threshold_2 in thresholds:
            if threshold_2 >= threshold_1:
                total_value += values_dict[threshold_2]
        normalized_values.append(total_value / tot * 100)
    return normalized_values


if __name__ == '__main__':
    avastnet_1250 = {
        1.0: 23120, 0.5: 481, 0.1: 343, 0.8: 800,
        0.3: 442, 0.2: 410, 0.9: 1303, 0.6: 508,
        0.7: 614, 0.4: 459, 0.0: 73
    }
    random_1250 = {
        0.1: 18122, 0.2: 698, 0.3: 230, 0.4: 163,
        0.9: 110, 0.8: 121, 0.6: 120, 0.5: 145,
        0.7: 132, 1.0: 63, 0.0: 65
    }
    malconv_2500 = {0.0: 73, 0.1: 26854, 0.4: 66, 0.2: 248, 1.0: 225, 0.9: 221, 0.3: 124, 0.6: 140, 0.7: 228, 0.5: 148, 0.8: 226}
    random_10000 = {
        0.1: 27854, 0.4: 66, 0.2: 248, 1.0: 25,
        0.9: 21, 0.3: 124, 0.6: 40, 0.7: 28,
        0.5: 48, 0.8: 26, 0.0: 73
    }

    if sys.argv[1] == "malconv":
        plot_far("MalConv", malconv_2500, random_10000, 2500)
    elif sys.argv[1] == "avastnet":
        plot_far("AvastNet", avastnet_1250, random_1250, 1250)
