import numpy as np
import matplotlib.pyplot as plt


def make_plot_clean_label_175():
    plt.rc("text", usetex=True)
    plt.rc("font", family="serif")
    plt.rc("font", serif=["Computer Modern Serif"])

    x_axis = np.arange(0., 0.45, 0.05)
    x_axis[0] = 0.0025
    x_axis[-1] = 0.3975
    y_axis = np.arange(0, 40, 5)
    fig, ax = plt.subplots()

    avastnet_result = [3.0, 15.8, 20.4, 5.4, 12.7, 9.8, 31.9, 26.8, 11.7]
    malconv_results = [3.3, 2.6, 2.8, 6.1, 2.0, 2.6, 3.6, 5.7, 3.1]

    ax.plot(x_axis[:], avastnet_result, "o--", color='r', linewidth=4.0, markersize=14, label=f"AvastNet")
    ax.plot(x_axis[:], malconv_results, "o--", color="orange", linewidth=4.0, markersize=14, label=f"MalConv")

    plt.annotate(f"{avastnet_result[0]}", (x_axis[0], avastnet_result[0]),
                 textcoords="offset points", xytext=(0, -28), ha="center", fontsize=25)
    for index, (x, y) in enumerate(zip(x_axis[1:], avastnet_result[1:])):
        if index == 2:
            plt.annotate(f"{y}", (x, y), textcoords="offset points", xytext=(0, -25), ha='center', fontsize=25)
        else:
            plt.annotate(f"{y}", (x, y), textcoords="offset points", xytext=(0, 10), ha='center', fontsize=25)

    for x, y in zip(x_axis[:], malconv_results):
        plt.annotate(f"{y}", (x, y), textcoords="offset points", xytext=(0, 10), ha='center', fontsize=25)

    ax.set_xticks(np.arange(0., .40, .05), [f"{x}" for x in np.arange(0, 40, 5)], fontsize=30)
    ax.set_yticks(np.arange(10, 40, 5), np.arange(10, 40, 5), fontsize=30)
    ax.set_xlabel("poisoning samples (\% of total training dataset)", fontsize=32)
    ax.set_ylabel("undetected triggered samples (\%)", fontsize=32)

    ax.set(xlim=(0, 0.40), xticks=np.arange(0., 0.45, 0.05), ylim=(0, 40), yticks=y_axis)
    ax.set_title(f"175-byte Trigger", fontsize=40)
    ax.legend(loc="upper left", fontsize=32)
    ax.grid()
    plt.show()


def make_plot_clean_label_2000():
    plt.rc("text", usetex=True)
    plt.rc("font", family="serif")
    plt.rc("font", serif=["Computer Modern Serif"])

    x_axis = np.arange(0., 0.45, 0.05)
    x_axis[0] = 0.0025
    x_axis[-1] = 0.3975
    y_axis = np.arange(0, 45, 5)
    fig, ax = plt.subplots()

    avastnet_result = [2.2, 39.4, 18.8, 17.7, 25.3, 34.1, 16.1, 20.4, 12.2]
    malconv_results = [3.4, 3.0, 7.0, 7.6, 8.0, 8.3, 8.5, 3.0, 2.5]

    ax.plot(x_axis[:], avastnet_result, "o--", color='r', linewidth=4.0, markersize=14, label=f"AvastNet")
    ax.plot(x_axis[:], malconv_results, "o--", color="orange", linewidth=4.0, markersize=14, label=f"MalConv")

    plt.annotate(f"{avastnet_result[0]}", (x_axis[0], avastnet_result[0]),
                 textcoords="offset points", xytext=(0, -28), ha="center", fontsize=25)
    for x, y in zip(x_axis[1:-1], avastnet_result[1:-1]):
        plt.annotate(f"{y}", (x, y), textcoords="offset points", xytext=(0, 10), ha='center', fontsize=25)
    plt.annotate(f"{avastnet_result[-1]}", (x_axis[-1], avastnet_result[-1] - 3),
                 textcoords="offset points", xytext=(0, 10), ha="center", fontsize=25)
    for x, y in zip(x_axis[:], malconv_results):
        plt.annotate(f"{y}", (x, y), textcoords="offset points", xytext=(0, 10), ha='center', fontsize=25)

    ax.set_xticks(np.arange(0., .45, .05), [f"{x}" for x in np.arange(0, 45, 5)], fontsize=30)
    ax.set_yticks(np.arange(10, 45, 5), np.arange(10, 45, 5), fontsize=30)
    ax.set_xlabel("poisoning samples (\% of total training dataset)", fontsize=32)
    ax.set_ylabel("undetected triggered samples (\%)", fontsize=32)

    ax.set(xlim=(0, 0.40), xticks=np.arange(0., 0.45, 0.05), ylim=(0, 40), yticks=y_axis)
    ax.set_title(f"2000-byte Trigger", fontsize=40)
    ax.legend(loc="upper right", fontsize=32)
    ax.grid()
    plt.show()


if __name__ == '__main__':
    make_plot_clean_label_2000()
    # make_plot_clean_label_175()
