import pefile


LEFT_OUT_BYTES = 8


def get_section_padding_addresses(pe_reader, section):
    section_start = section.PointerToRawData
    section_end = section_start + section.SizeOfRawData
    section_bytes = pe_reader.__data__[section_start:section_end + 1]
    section_length = len(section_bytes)
    for byte_index in range(section_length - 1, -1, -1):
        if section_bytes[byte_index] != 0:
            if section_start + byte_index + 1 < section_end:
                return section_start + byte_index + 1, section_end
            else:
                break
    return None, None


def get_padding_addresses(file):
    try:
        pe_reader = pefile.PE(file)
    except pefile.PEFormatError:
        return []

    patch_addresses = []
    for section in pe_reader.sections:
        start_address, end_address = get_section_padding_addresses(pe_reader, section)
        if start_address and end_address:
            patch_addresses.append((start_address, end_address))

    return patch_addresses
