import os
import sys
import logging
import statistics

import numpy as np

from detectors.utils import get_model


def load_model(model_name, model_path):
    return get_model(model_name, model_path)


def get_prediction(model, file_path):
    with open(file_path, 'rb') as infile:
        file_content = infile.read()
        file_content = np.array([file_content], dtype="bytes_")
    return float(model(file_content)[0][0])


def get_fps(model, file_dir):
    fps = []
    predictions = []
    for file_path in os.scandir(file_dir):
        prediction = get_prediction(model, file_path)
        if prediction >= 0.5:
            fps.append(file_path)
            predictions.append(prediction)

    logging.info(statistics.mean(predictions))
    return fps


if __name__ == '__main__':
    m = load_model(sys.argv[1], sys.argv[2])
    fps_list = get_fps(m, sys.argv[3])

    with open("fps.txt", 'w') as outfile:
        for fp in fps_list:
            outfile.write(f"{fp.name}\n")
