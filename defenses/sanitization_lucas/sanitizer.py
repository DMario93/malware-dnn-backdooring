import os
import sys
import logging

import pefile


logging.basicConfig(level=logging.INFO)


def get_text_start_end(pe_reader: pefile.PE):
    for section in pe_reader.sections:
        if b"text" in section.Name:
            text_start = section.PointerToRawData
            text_end = text_start + section.SizeOfRawData
            return text_start, text_end
    return 0, 0


def pad_non_code(file_path, output_dir):
    if os.path.getsize(file_path) >= 5000000:
        return

    pe_reader = pefile.PE(file_path)
    text_start, text_end = get_text_start_end(pe_reader)
    program_len = len(pe_reader.__data__[:2000000])
    if text_start >= 2000000:
        return
    if text_end >= 2000000:
        text_end = program_len

    program_bytes = bytearray([0 for _ in range(program_len)])

    for byte_index in range(text_start, text_end):
        try:
            program_bytes[byte_index] = pe_reader.__data__[byte_index]
        except IndexError:
            logging.error(f"index error {byte_index}/{len(pe_reader.__data__)}")
    with open(os.path.join(output_dir, os.path.basename(file_path)), 'wb') as outfile:
        outfile.write(bytes(program_bytes))


def sanitize_files(input_dir, output_dir):
    for index, file_path in enumerate(os.scandir(input_dir)):
        logging.info(f"file {index + 1}")
        pad_non_code(file_path, output_dir)


if __name__ == '__main__':
    sanitize_files(sys.argv[1], sys.argv[2])
